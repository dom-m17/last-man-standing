// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: team.sql

package db

import (
	"context"
)

const getTeam = `-- name: GetTeam :one
SELECT id, long_name, short_name, tla, crest_url
FROM teams
WHERE id = $1
`

func (q *Queries) GetTeam(ctx context.Context, id int64) (Team, error) {
	row := q.db.QueryRowContext(ctx, getTeam, id)
	var i Team
	err := row.Scan(
		&i.ID,
		&i.LongName,
		&i.ShortName,
		&i.Tla,
		&i.CrestUrl,
	)
	return i, err
}

const listTeams = `-- name: ListTeams :many
SELECT id, long_name, short_name, tla, crest_url
FROM teams
`

func (q *Queries) ListTeams(ctx context.Context) ([]Team, error) {
	rows, err := q.db.QueryContext(ctx, listTeams)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []Team{}
	for rows.Next() {
		var i Team
		if err := rows.Scan(
			&i.ID,
			&i.LongName,
			&i.ShortName,
			&i.Tla,
			&i.CrestUrl,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
