package graphresolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"

	"github.com/dom-m17/lms/backend/internal/subgraph"
	graphmodels "github.com/dom-m17/lms/backend/internal/subgraph/model"
)

// Entry is the resolver for the entry field.
func (r *selectionResolver) Entry(ctx context.Context, obj *graphmodels.Selection) (*graphmodels.Entry, error) {
	panic(fmt.Errorf("not implemented: Entry - entry"))
}

// Match is the resolver for the match field.
func (r *selectionResolver) Match(ctx context.Context, obj *graphmodels.Selection) (*graphmodels.Match, error) {
	panic(fmt.Errorf("not implemented: Match - match"))
}

// Team is the resolver for the team field.
func (r *selectionResolver) Team(ctx context.Context, obj *graphmodels.Selection) (*graphmodels.Team, error) {
	panic(fmt.Errorf("not implemented: Team - team"))
}

// Selection returns subgraph.SelectionResolver implementation.
func (r *Resolver) Selection() subgraph.SelectionResolver { return &selectionResolver{r} }

type selectionResolver struct{ *Resolver }
