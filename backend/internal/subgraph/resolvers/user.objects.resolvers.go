package graphresolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.74

import (
	"context"
	"fmt"

	"github.com/dom-m17/lms/backend/internal/subgraph"
	"github.com/dom-m17/lms/backend/internal/subgraph/graphconverters"
	graphmodels "github.com/dom-m17/lms/backend/internal/subgraph/model"
)

// FavouriteTeam is the resolver for the favouriteTeam field.
func (r *userResolver) FavouriteTeam(ctx context.Context, obj *graphmodels.User) (*graphmodels.Team, error) {
	team, err := r.TeamService.GetTeam(ctx, obj.FavouriteTeam.ID)
	if err != nil {
		return nil, fmt.Errorf("getting team: %w", err)
	}

	return graphconverters.ConvertModelTeamToGraphTeam(team), nil
}

// User returns subgraph.UserResolver implementation.
func (r *Resolver) User() subgraph.UserResolver { return &userResolver{r} }

type userResolver struct{ *Resolver }
