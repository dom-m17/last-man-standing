package graphresolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.73

import (
	"context"
	"fmt"

	"github.com/dom-m17/lms/backend/internal/subgraph/model"
)

// CreateMatch is the resolver for the createMatch field.
func (r *mutationResolver) CreateMatch(ctx context.Context, input model.CreateMatchInput) (*model.Match, error) {
	panic(fmt.Errorf("not implemented: CreateMatch - createMatch"))
}

// UpdateMatch is the resolver for the updateMatch field.
func (r *mutationResolver) UpdateMatch(ctx context.Context, input model.UpdateMatchInput) (*model.Match, error) {
	panic(fmt.Errorf("not implemented: UpdateMatch - updateMatch"))
}

// GetMatch is the resolver for the getMatch field.
func (r *queryResolver) GetMatch(ctx context.Context, input string) (*model.Match, error) {
	panic(fmt.Errorf("not implemented: GetMatch - getMatch"))
}

// GetMatchesByMatchday is the resolver for the getMatchesByMatchday field.
func (r *queryResolver) GetMatchesByMatchday(ctx context.Context, input int32) ([]*model.Match, error) {
	panic(fmt.Errorf("not implemented: GetMatchesByMatchday - getMatchesByMatchday"))
}
