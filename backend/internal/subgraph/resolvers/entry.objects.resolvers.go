package graphresolvers

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.78

import (
	"context"
	"fmt"

	"github.com/dom-m17/lms/backend/internal/subgraph"
	graphmodels "github.com/dom-m17/lms/backend/internal/subgraph/model"
)

// User is the resolver for the user field.
func (r *entryResolver) User(ctx context.Context, obj *graphmodels.Entry) (*graphmodels.User, error) {
	panic(fmt.Errorf("not implemented: User - user"))
}

// Competition is the resolver for the competition field.
func (r *entryResolver) Competition(ctx context.Context, obj *graphmodels.Entry) (*graphmodels.Competition, error) {
	panic(fmt.Errorf("not implemented: Competition - competition"))
}

// Entry returns subgraph.EntryResolver implementation.
func (r *Resolver) Entry() subgraph.EntryResolver { return &entryResolver{r} }

type entryResolver struct{ *Resolver }
